#include<iostream>
#include<string>
#define MAX 1000
using namespace std;
struct Person {//联系人结构体
	string name;//姓名
	int sex;//性别：1男 2女
	int age;//年龄
	string phone;//电话
	string addr;//地址
};
struct Addressbook{//通讯录结构体
	Person array[MAX];//通讯录中保存的联系人数组
	int size;  //联系人个数
};
//显示菜单界面
void showMenu() {
	cout << "****************************" << endl;
	cout << "********1.添加联系人********" << endl;
	cout << "********2.显示联系人********" << endl;
	cout << "********3.删除联系人********" << endl;
	cout << "********4.查找联系人********" << endl;
	cout << "********5.修改联系人********" << endl;
	cout << "********6.清空联系人********" << endl;
	cout << "********0.退出通讯录********" << endl;
	cout << "****************************" << endl;
}
//增加联系人
void addPerson(Addressbook* p) {
	//判断通讯录是否已满，若已满则无法添加
	if (p->size == MAX) {
		cout << "通讯录已满，无法添加";
		return;
	}
	else {
		//添加联系人
		//添加姓名
		string name;
		cout << "请输入姓名：" << endl;
		cin >> name;
		p->array[p->size].name = name;
		//添加性别，1代表男，2代表女
		int sex;
		cout << "请输入性别：" << endl;
		cout << "1----男" << endl;
		cout << "2----女" << endl;
		while (true) {
			//只有输入的是1或者2时，才算输入成功
			//如果输入有误，需要重新输入
			cin >> sex;
			if (sex == 1 || sex == 2) {
				p->array[p->size].sex = sex;
				break;
			}
			cout << "输入有误，请重新输入" << endl;
		}
		//添加年龄
		int age;
		cout << "请输入年龄：" << endl;
		cin >> age;
		p->array[p->size].age = age;
		//添加电话
		string phone;
		cout << "请输入电话：" << endl;
		cin >> phone;
		p->array[p->size].phone = phone;
		//添加地址
		string addr;
		cout << "请输入地址：" << endl;
		cin >> addr;
		p->array[p->size].addr = addr;
	}
	p->size++;
	cout << "添加成功" << endl;
	system("pause");
	system("cls");
}
//显示所有联系人
void showPersons(const Addressbook* p) {
	//当通讯录中无联系人时，提示记录为空
	if (p->size == 0) 
		cout << "当前记录为空" << endl;
	else {
		for (int i = 0; i < p->size; i++) {
			cout << "姓名为：" << p->array[i].name <<"\t";
			cout << "性别为：" <<( (p->array[i].sex==1)?"男":"女")<< "\t";
			cout << "年龄为：" << p->array[i].age << "\t";
			cout << "电话为：" << p->array[i].phone << "\t\t";
			cout << "地址为：" << p->array[i].addr << endl;
		}
	}
	system("pause");
	system("cls");
}
//检测要查找的联系人名是否存在，存在就返回联系人在数组中的位置，不存在则返回-1
int isExist(Addressbook *p, string name) {
	for (int i = 0; i < p->size; i++) {
		if (p->array[i].name == name) return i;
	}
	return -1;
}
void deletePerson(Addressbook *p) {
	cout << "请输入要删除的联系人名" << endl;
	string name;
	cin >> name;
	int res = isExist(p, name);
	if(res == -1)
		cout << "查无此人" << endl;
	else{//将要删除的元素之后的元素向前移动，并且将通讯录长度减一
		for (int i = res; i < p->size-1; i++) {
			p->array[i] = p->array[i + 1];
		}
		p->size--;
		cout << "删除成功" << endl;
	}
	system("pause");
	system("cls");
}
//查找指定联系人的信息
void findPerson(Addressbook *p) {
	cout << "请输入要查找的联系人名" << endl;
	string name;
	cin >> name;
	int res = isExist(p, name);
	if (res == -1)
		cout << "查无此人" << endl;
	else {
		cout << "姓名为：" << p->array[res].name << "\t";
		cout << "性别为：" << ((p->array[res].sex == 1) ? "男" : "女") << "\t";
		cout << "年龄为：" << p->array[res].age << "\t";
		cout << "电话为：" << p->array[res].phone << "\t\t";
		cout << "地址为：" << p->array[res].addr << endl;
		cout << "查找成功" << endl;
	}
	system("pause");
	system("cls");
}
//修改指定联系人
void modifyPerson(Addressbook* p) {
	cout << "请输入要修改的联系人名" << endl;
	string name;
	cin >> name;
	int res = isExist(p, name);
	if (res == -1)
		cout << "查无此人" << endl;
	else {
		//修改联系人
		//修改姓名
		string name;
		cout << "请输入姓名：" << endl;
		cin >> name;
		p->array[res].name = name;
		//修改性别，1代表男，2代表女
		int sex;
		cout << "请输入性别：" << endl;
		cout << "1----男" << endl;
		cout << "2----女" << endl;
		while (true) {
			//只有输入的是1或者2时，才算输入成功
			//如果输入有误，需要重新输入
			cin >> sex;
			if (sex == 1 || sex == 2) {
				p->array[res].sex = sex;
				break;
			}
			cout << "输入有误，请重新输入" << endl;
		}
		//修改年龄
		int age;
		cout << "请输入年龄：" << endl;
		cin >> age;
		p->array[res].age = age;
		//修改电话
		string phone;
		cout << "请输入电话：" << endl;
		cin >> phone;
		p->array[res].phone = phone;
		//修改地址
		string addr;
		cout << "请输入地址：" << endl;
		cin >> addr;
		p->array[res].addr = addr;
		cout << "修改成功" << endl;
	}
	system("pause");
	system("cls");
}
void clearPerson(Addressbook *p) {
	p->size = 0;
	cout << "通讯录已清空" << endl;
	system("pause");
	system("cls");
}
int main() {
	//表示用户选择的操作序号
	int select;
	Addressbook addressBook;
	addressBook.size = 0;
	while (true) {
		showMenu();
		cin >> select;
		switch (select) {
		case 1://添加联系人
			addPerson(&addressBook);
			break;
		case 2://显示联系人
			showPersons(&addressBook);
			break;
		case 3://删除联系人
			deletePerson(&addressBook);
		case 4://查找联系人
			findPerson(&addressBook);
			break;
		case 5://修改联系人
			modifyPerson(&addressBook);
			break;
		case 6://清空联系人
			clearPerson(&addressBook);
			break;
		case 0://退出通讯录
			cout << "欢迎下次使用" << endl;
			return 0;
			break;
		}
	}
	system("pause");
	return 0;
}
